# adaptive-android-v2.yaml
# ----------------------------------------------------------------------
# 変更理由（Changelog / Rationale）
# - v1 運用中に、Detail / MainContent / SubContent が NavGraph 未登録であることが判明。
# - これらは単なる Composable として存在していたため、実際の画面遷移ができない。
# - v2 では NavGraph への destinations 追加、エントリ関数の分離、配線、戻る、deep link
#   までを段階的に組み込むマイルストーンを新設した。
# - 既存 v1 は互換維持（modules-and-deps / top-and-tabs / list-second-level / subcontent-third-level）。
# ----------------------------------------------------------------------

workflow: "Adaptive layouts playground (Android v2)"
principles:
  - "Each task must compile (:app:assembleDebug or module-local build)."
  - "One commit per task."
  - "Keep adaptive usage behind :core:ui wrappers."
  - "Respect depends_on strictly."
  - "Changes must stay within module_scope."

milestones:
  - name: "refactor-to-modules-and-deps"
    description: "リファクタをしていく"
    tasks:
      - id: "Create module.Detail, MainContent, SubContent"
        goal: "DetailScreen, MainContentScreen, SubContentScreen を featureモジュールに分割する"
        module_scope: [":feature:list", ":feature:detail", ":feature:maincontent", ":feature:subcontent", "navigation", "core:ui", "core:route"]
        actions:
          - "DetailScreen, MainContentScreen, SubContentScreen をそれぞれ feature モジュールに移動する"
          - "必要に応じて core:ui のコンポーネントを利用するように修正する"
          - "各モジュールの build.gradle.kts に必要な依存関係を追加する"
          - "Run ./gradlew :feature:list:build :feature:detail:build :feature:maincontent:build :feature:subcontent:build"
        verify: "それぞれのモジュールでassembleDebugが成功すること"

      - id: "migrate-type-safe-navigation-compose"
        goal: "NavigationComposeを型安全に使う"
        module_scope: ["app", "core:route", "feature:navigation"]
        actions:
          - "kotlin-serializationの依存をプロジェクトに導入"
          - "各画面を表現したrouteをシリアライザブルなデータクラスに置き換え。core:routeのみに配置"
          - "既存のnavigation compose の画面遷移の仕組みを,type-safe な形に変更。NavHostの中身の宣言を変更する形になるはず"
        verify: "appがassembleDebugに成功すること"
  - name: "implement-navigation-flows"
    description: "Detail / MainContent / SubContent への画面遷移を実装する"
    tasks:
      - id: "impl-navigation-flow-1"
        goal: "DetailContentへのNavigationフローを実装"
        module_scope: [ "core:route", "feature:navigation", "feature:list", "feature:detail" ]
        actions:
          - "ListScreenでlistをタップしたらDetailScreenへ遷移できるようにする"
        verify: "appがassembleDebugに成功すること"
      - id: "impl-navigation-flow-2"
        goal: "MainScreenContentへのnavigationフローを実装する"
        module_scope: ["core:route", "feature:navigation", "feature:list", "feature:detail", "feature:maincontent", "feature:subcontent"]
        actions:
          - "ホームからMainContentへの導線を作成して遷移できるようにする"
          - "ListScreenでlistをタップしたらDetailScreenへ遷移できるようにする"
          - "DetailScreenからMainContentへ遷移できるようにする"
        verify: "appがassembleDebugに成功すること"
      - id: "impl-navigation-flow-3"
        goal: "SubContentへのnavigationフローを実装する"
        module_scope: [ "core:route", "feature:navigation","feature:maincontent", "feature:subcontent" ]
        actions:
          - "MainContentからSubContentへの導線を作成して、遷移できるようにする"
        verify: "appがassembleDebugに成功すること"